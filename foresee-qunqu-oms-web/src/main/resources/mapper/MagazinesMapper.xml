<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.foresee.dao.MagazinesMapper" >
  <resultMap id="BaseResultMap" type="com.foresee.model.Magazines" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="communitys_id" property="communitysId" jdbcType="INTEGER" />
    <result column="magazine_title" property="magazineTitle" jdbcType="VARCHAR" />
    <result column="magazine_icon" property="magazineIcon" jdbcType="VARCHAR" />
    <result column="magazine_desc" property="magazineDesc" jdbcType="VARCHAR" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="follow_count" property="followCount" jdbcType="INTEGER" />
    <result column="magazine_tag" property="magazineTag" jdbcType="VARCHAR" />
    <result column="created_date" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="updated_date" property="updatedDate" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="updated_by" property="updatedBy" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="flow_sts" property="flowSts" jdbcType="CHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_user_id, communitys_id, magazine_title, magazine_icon, magazine_desc, 
    read_count, follow_count, magazine_tag, created_date, updated_date, created_by, updated_by, 
    is_deleted, flow_sts, start_date
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
		a.*, 
		d.nick_name as createdName,
		e.nick_name as updatedName,
		GROUP_CONCAT(b.articles_id) AS articlesIds,
		c.community_name as communityName
	FROM
	magazines a
	LEFT JOIN magazine_articles b ON FIND_IN_SET(b.magazines_id, a.id)		
	LEFT JOIN communitys c ON a.communitys_id = c.id		
 	LEFT JOIN wechat_user d ON a.created_by = d.id
	LEFT JOIN wechat_user e ON a.updated_by = e.id						
    where a.id = #{id,jdbcType=INTEGER}
    GROUP BY a.id
  </select>

 <select id="selectList" resultMap="BaseResultMap" parameterType="com.foresee.model.Magazines" >
    SELECT
		a.*, 
		d.nick_name as createdName,
		e.nick_name as updatedName,
		GROUP_CONCAT(b.articles_id) AS articlesIds,
		c.community_name as communityName
	FROM
	magazines a
	LEFT JOIN magazine_articles b ON FIND_IN_SET(b.magazines_id, a.id)		
	LEFT JOIN communitys c ON a.communitys_id = c.id		
 	LEFT JOIN wechat_user d ON a.created_by = d.id
	LEFT JOIN wechat_user e ON a.updated_by = e.id
    where 1=1
    <include refid="querysql"></include>
    GROUP BY a.id   order by a.is_deleted asc,a.created_date desc
  </select>
  <sql id="querysql">
  	  <if test="id != null and id!=''" >
        and a.id = #{id,jdbcType=INTEGER}
      </if>
  	  <if test="createUserId != null and createUserId!=''" >
        and a.create_user_id = #{createUserId,jdbcType=INTEGER}
      </if>
      <if test="communitysId != null and communitysId!=''" >
        and a.communitys_id = #{communitysId,jdbcType=INTEGER}
      </if>
      <if test="magazineTitle != null and magazineTitle!=''" >
        and a.magazine_title like concat('%',#{magazineTitle,jdbcType=VARCHAR},'%')
      </if>
      <if test="magazineIcon != null and magazineIcon!=''" >
        and a.magazine_icon = #{magazineIcon,jdbcType=VARCHAR}
      </if>
      <if test="magazineDesc != null and magazineDesc!=''" >
        and a.magazine_desc = #{magazineDesc,jdbcType=VARCHAR}
      </if>
      <if test="readCount != null and readCount!=''" >
        and a.read_count = #{readCount,jdbcType=INTEGER}
      </if>
      <if test="followCount != null and followCount!=''" >
        and a.follow_count = #{followCount,jdbcType=INTEGER}
      </if>
      <if test="magazineTag != null and magazineTag!=''" >
        and a.magazine_tag = #{magazineTag,jdbcType=VARCHAR}
      </if>
      <if test="createdDateStar != null and createdDateStar !='' and createdDateEnd != null and createdDateEnd != '' " >
        <![CDATA[ and a.created_date >= #{createdDateStar} and a.created_date < #{createdDateEnd} ]]> 
      </if>
      <if test="updatedDateStar != null and updatedDateStar != ''  and updatedDateEnd !=null and updatedDateEnd != ''" >
      <![CDATA[ and a.updated_date >= #{updatedDateStar} and a.updated_date < #{updatedDateEnd} ]]> 
      </if>
      <if test="createdBy != null and createdBy!=''" >
        and a.created_by = #{createdBy,jdbcType=VARCHAR}
      </if>
      <if test="updatedBy != null and updatedBy!=''" >
        and a.updated_by = #{updatedBy,jdbcType=VARCHAR}
      </if>
      <if test="isDeleted != null and isDeleted!='' or isDeleted==0 " >
        and a.is_deleted = #{isDeleted,jdbcType=INTEGER}
      </if>
      <if test="flowSts != null and flowSts!=''" >
        and a.flow_sts = #{flowSts,jdbcType=CHAR}
      </if>
      <if test="startDateStar != null and startDateStar != ''  and startDateEnd !=null and startDateEnd != ''" >
      <![CDATA[ and a.start_date >= #{startDateStar} and a.start_date < #{startDateEnd} ]]> 
      </if>
  </sql>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from magazines
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.foresee.model.Magazines" >
    insert into magazines (id, create_user_id, communitys_id, 
      magazine_title, magazine_icon, magazine_desc, 
      read_count, follow_count, magazine_tag, 
      created_date, updated_date, created_by, 
      updated_by, is_deleted, flow_sts, 
      start_date)
    values (#{id,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, #{communitysId,jdbcType=INTEGER}, 
      #{magazineTitle,jdbcType=VARCHAR}, #{magazineIcon,jdbcType=VARCHAR}, #{magazineDesc,jdbcType=VARCHAR}, 
      #{readCount,jdbcType=INTEGER}, #{followCount,jdbcType=INTEGER}, #{magazineTag,jdbcType=VARCHAR}, 
      #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}, #{flowSts,jdbcType=CHAR}, 
      #{startDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.foresee.model.Magazines" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into magazines
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="communitysId != null" >
        communitys_id,
      </if>
      <if test="magazineTitle != null" >
        magazine_title,
      </if>
      <if test="magazineIcon != null" >
        magazine_icon,
      </if>
      <if test="magazineDesc != null" >
        magazine_desc,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="followCount != null" >
        follow_count,
      </if>
      <if test="magazineTag != null" >
        magazine_tag,
      </if>
      <if test="createdDate != null" >
        created_date,
      </if>
      <if test="updatedDate != null" >
        updated_date,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="updatedBy != null" >
        updated_by,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="flowSts != null" >
        flow_sts,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="communitysId != null" >
        #{communitysId,jdbcType=INTEGER},
      </if>
      <if test="magazineTitle != null" >
        #{magazineTitle,jdbcType=VARCHAR},
      </if>
      <if test="magazineIcon != null" >
        #{magazineIcon,jdbcType=VARCHAR},
      </if>
      <if test="magazineDesc != null" >
        #{magazineDesc,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="magazineTag != null" >
        #{magazineTag,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="flowSts != null" >
        #{flowSts,jdbcType=CHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.foresee.model.Magazines" >
    update magazines
    <set >
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="communitysId != null" >
        communitys_id = #{communitysId,jdbcType=INTEGER},
      </if>
      <if test="magazineTitle != null" >
        magazine_title = #{magazineTitle,jdbcType=VARCHAR},
      </if>
      <if test="magazineIcon != null" >
        magazine_icon = #{magazineIcon,jdbcType=VARCHAR},
      </if>
      <if test="magazineDesc != null" >
        magazine_desc = #{magazineDesc,jdbcType=VARCHAR},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="magazineTag != null" >
        magazine_tag = #{magazineTag,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null" >
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null" >
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="flowSts != null" >
        flow_sts = #{flowSts,jdbcType=CHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.foresee.model.Magazines" >
    update magazines
    set create_user_id = #{createUserId,jdbcType=INTEGER},
      communitys_id = #{communitysId,jdbcType=INTEGER},
      magazine_title = #{magazineTitle,jdbcType=VARCHAR},
      magazine_icon = #{magazineIcon,jdbcType=VARCHAR},
      magazine_desc = #{magazineDesc,jdbcType=VARCHAR},
      read_count = #{readCount,jdbcType=INTEGER},
      follow_count = #{followCount,jdbcType=INTEGER},
      magazine_tag = #{magazineTag,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      flow_sts = #{flowSts,jdbcType=CHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>